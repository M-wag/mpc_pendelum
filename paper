Research Question:
    Optimal Horizon to Energy Ratio

Intro:
    Lecun recently mentioned the importane of MPC in general intelligence
    As a Neuroscientist this seems like a great way to model high order cognition
    However the same computation goal, in this case MPC can be reached in different ways
    For example in planning an agent can predict more trajectories at a given time, parallelism
    Or they can predict trajectories for a longer time, seems like recurrence

    MPC is a great way to model this as both the length of trajectory, horizon,  
    and n trajectories are easily adjusted parameters. 

    We assess both metrics by studying the relation between the parameter and time until agent 
    converges on the solution.

    Since it's a very simple model we are much more interested in the relationship(exponential, linear) between 
    ttc and (parallism or recurrence) and less the absolute value 

    An additional constraint we want to add is power usage. 
    Biological organisms have more finite resources relative to the data centers large models are trained on
    Meaning any conclusion we pull i
    From a Marrian perspective, even if the computation of organisms and large models is equal
    The most suitable algorithm will depend on the implementaiional level, i.e. how the hardware is realized

    And one big difference between organisms nad large model is energy availability
    In short, models have much more energy available 
    so an algorithm that works well in models might not work well with organisms 
    because they don't have enough energy to sustain that algorithm

    although we want actively have our MPC consider time
    we will measure the "resource utilization" over time to see what the energy  consumptions are


Methods
    You train a NODE
    You train a policy

    Condition 1:
	measure ttc ~ recccurence
	measure ttc ~ n_width 
	measure ttc ~ n_width * recucrence
    Condition 2: 
	measure energy ~ recccurence
	measure energy ~ n_width 
	measure energy ~ n_width * recucrence
	

Considerations
    Different MPC algorithm (greedy etc)
    We assume no interaction effect between horizon 
    and batch size
    We do not consider the optimizatizations JIT and hardware are makig
    The CPU usage, could have been affected by background processes. Future would want better way to measaure FLOPS
    We don't consider the affect of pycache and speedus by from stuff already being compiled

Future work
    Hypothesis about hardware and neuroscience algorithms
    Testing hypothesis on neuromorphic hardware
    Given some inspired architecture what algorithm is most appropriate
    Analytical methods to get the optimal rate of recurrence and parallism 


Conclusion:
